Matt Beauvais
Jan Feyen


CSE 4300 Group Project Proposal

A Shell Written in C++

Our project idea is to write a relatively simple shell program in C++. The shell will accept a group of commands written by us. The exact number of commands defined by us depeneds on time. Some commands
include things such as displaying the user history of commands, displaying system/memory information, killing procesess, and miscellanous features.

If the command given to the shell is a regualar bash command, it will accept that too, as long as we don't override the name.

The shell will make use of the process API within C++ to execute procesess. It will also include functionality for piping the standard output of a command to the standard input of another, and also will include support for append the output of a program to a file. 

Furthermore, the C++17 standard includes a library that allows the code to perform operations on file systems. If time allows, we may be able to make use of this to write our own ls and cd functions.

The shell will work like this:

It will first start up and run in an infinite loop prompting the user for some kind of command. The only way to kill the Shell would be through the command "exit" or through sending an interrupt signal

The user will enter a command. It does not have to be a singular command. For instance, the user could write command1 | command 2 or command1 > out.txt.

The program will first search through a list of precreated commands. If it it finds one of these, it will run it. Otherwise, it will accept anything that is a bash shell command

The shell will call fork and then the exec command with whatever command or program it needs to run

The command will be added to the command history

If there are any piping and writing to files, this will be set up before the call to exec

The program will run and the shell will ask for another command.

